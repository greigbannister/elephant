{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "nubeva",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "sshPublicKey": {
      "type": "string",
      "metadata": {
        "description": "Configure all linux machines with the SSH public key string, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
      }
    },
    "virtualNetworkResourceGroup" : {
        "type": "string",
            "metadata": {
                "description": "The resource group that holds the virtual network to deploy the cluster nodes into."
            }
        },
    "virtualNetworkName" : {
        "type": "string",
        "metadata": {
            "description": "The virtual network to deploy the cluster nodes into."
        }
    },
    "subnetCidr" : {
        "type": "string",
        "metadata": {
            "description": "CIDR to allocate to a new subnet in the vNet for the kubernetes nodes"
        }
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "allowedValues": [
        "Standard_B2s",
        "Standard_B2ms",
        "Standard_D2s_v3",
        "Standard_D2_v3",
        "Standard_DS2_v2",
        "Standard_D2_v2",
        "Standard_DS2",
        "Standard_D2",
        "Standard_A2_v2",
        "Standard_A2"
      ],
      "metadata": {
        "description": "The virutal machine size to use. We picked out the sizes with 2 vCPUs, but in real world projects you can choose other sizes as you desired."
      }
    },
    "servicePrincipalAppId": {
      "type": "string",
      "metadata": {
        "description": "Service Principal App ID (also called Client ID) that has contributor rights to the subscription used for this deployment. It is used by the Kubernetes cluster to dynamically manage resources (e.g. user-defined load balancers)."
      }
    },
    "servicePrincipalAppKey": {
      "type": "securestring",
      "metadata": {
        "description": "Service Principal App Key (also called Client Secret) that has contributor rights to the subscription used for this deployment. It is used by the Kubernetes cluster to dynamically manage resources (e.g. user-defined load balancers)."
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "resourcePrefix": "nubeva",
    "OSDiskName": "[concat(variables('resourcePrefix'), '-os-disk')]",
    "nicName": "[concat(variables('resourcePrefix'), '-nic')]",
    "subnetName": "[concat(variables('resourcePrefix'), '-subnet')]",
    "subnetId":"[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
    "vmName": "[concat(variables('resourcePrefix'), '-vm')]",
    "vnetId": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "vmExtensionName": "[concat(variables('resourcePrefix'), '-init')]",
    "frontEndNSGName": "[concat(variables('resourcePrefix'), '-nsg')]",
    "aksName": "aks",
    "aksDnsPrefix": "[concat('aks', uniqueString(resourceGroup().id))]",
    "_artifactsLocation": "https://raw.githubusercontent.com/gbannister/elephant/master/azure/artifacts/",
    "_extensionScript": "deploy-elephant.sh"
  },
  "resources": [
              {
            "apiVersion": "2017-05-10",
            "name": "nestedTemplateForSubnet",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('virtualNetworkResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
          {
      "apiVersion": "2018-04-01",
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "name": "[concat(parameters('virtualNetworkName'),'/',variables('subnetName'))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressPrefix": "[parameters('subnetCidr')]"
      }
    }
                    ]
                },
                "parameters": {}
            }
        },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[variables('location')]",
      "properties": {
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('sshPublicKey')]"
                }
              ]
            }
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('OSDiskName')]",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
      ],
      "resources": [
        {
          "type": "extensions",
          "name": "[variables('vmExtensionName')]",
          "apiVersion": "2015-06-15",
          "location": "[variables('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]",
            "[resourceId('Microsoft.ContainerService/managedClusters', variables('aksName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(variables('_artifactsLocation'), variables('_extensionScript'))]"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "[concat('./', variables('_extensionScript'), ' --app_id \"', parameters('servicePrincipalAppId'), '\" --app_key \"', parameters('servicePrincipalAppKey'), '\" --subscription_id \"', subscription().subscriptionId, '\" --tenant_id \"', subscription().tenantId, '\" --resource_group \"', resourceGroup().name, '\" --aks_name \"', variables('aksName'), '\" --artifacts_location \"', variables('_artifactsLocation'), '\" ')]"
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "apiVersion": "2016-09-01",
      "location": "[variables('location')]",
            "dependsOn": [
                "nestedTemplateForSubnet"
            ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetId')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-08-31",
      "type": "Microsoft.ContainerService/managedClusters",
      "location": "[variables('location')]",
      "name": "[variables('aksName')]",
      "dependsOn": [
                "nestedTemplateForSubnet"
            ],
      "properties": {
        "dnsPrefix": "[variables('aksDnsPrefix')]",
        "agentPoolProfiles": [
          {
            "name": "agentpool",
            "count": 2,
            "vmSize": "[parameters('virtualMachineSize')]",
            "osType": "Linux",
            "storageProfile": "ManagedDisks",
            "vnetSubnetID": "[variables('subnetId')]"
          }
        ],
        "linuxProfile": {
          "adminUsername": "[parameters('adminUsername')]",
          "ssh": {
            "publicKeys": [
              {
                "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                "keyData": "[parameters('sshPublicKey')]"
              }
            ]
          }
        },
        "servicePrincipalProfile": {
          "ClientId": "[parameters('servicePrincipalAppId')]",
          "Secret": "[parameters('servicePrincipalAppKey')]"
        }
      }
    }
  ],
  "outputs": {
    "admin_username": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "kubernetes_master_fqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('aksName'))).fqdn]"
    }
  }
}
